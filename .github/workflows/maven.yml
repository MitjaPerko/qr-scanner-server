# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: QR-Scanner - Java CI with Maven

on:
  push:
    branches: [ "master" ]

jobs:
      
  job1:
    name: Compiles and Runs the Java Spark REST Server
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Install Google Chrome
        run: |
              chmod +x ./scripts/InstallChrome.sh
                       ./scripts/InstallChrome.sh

      - name: Build with Maven
        run: mvn -B package -Dmaven.test.skip --file pom.xml

      # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

  job2:
      name: Runs the Web-Client
      runs-on: ubuntu-latest
      needs: job1
      steps:
        - name: Install Node
          uses: actions/setup-node@v2-beta
          with:
            node-version: '16'
        - name: Install external repo
          uses: actions/checkout@v2
          with:
            repository: heusser4git/qr-scanner-client
            path: './qr-scanner-client'
        - name: Install deps and run
          run: |
            cd ./qr-scanner-client
            npm install
            npm start      

  job3:
    name: Tests the Spark-REST-Server with UnitTests and the Client with Java-Selenium
    runs-on: ubuntu-latest
    needs: [job1, job2]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B test --file pom.xml
